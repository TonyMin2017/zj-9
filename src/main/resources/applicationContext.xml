<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="
	      http://www.springframework.org/schema/beans
		  http://www.springframework.org/schema/beans/spring-beans.xsd
		  http://www.springframework.org/schema/context
		  http://www.springframework.org/schema/context/spring-context.xsd
		  http://www.springframework.org/schema/aop
		  http://www.springframework.org/schema/aop/spring-aop.xsd
		  http://www.springframework.org/schema/tx
		  http://www.springframework.org/schema/tx/spring-tx.xsd
		  http://www.springframework.org/schema/mvc
		  http://www.springframework.org/schema/mvc/spring-mvc.xsd">


    <!--开启注解-->
    <mvc:annotation-driven />
    <!-- 有注解的包扫描路径； -->
    <context:component-scan base-package="com.sz.yb" />

    <!--
        spring 配置注入一个sessionfactory
      1.需要一个数据源： dataSource;
      2.根据数据源配置sessionFactory;
      -->

    <!-- 配置数据源； -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <!-- 设置为close使Spring容器关闭同时数据源能够正常关闭，以免造成连接泄露 -->

        <property name="driverClassName" value="com.mysql.jdbc.Driver" />
        <property name="url" value="jdbc:mysql://localhost:3306/szyb?useUnicode=true&amp;characterEncoding=UTF-8" />
        <property name="username" value="root" />
        <property name="password" value="root" />
        <property name="defaultReadOnly" value="false" />
        <!-- 设置为只读状态，配置读写分离时，读库可以设置为true
        在连接池创建后，会初始化并维护一定数量的数据库安连接，当请求过多时，数据库会动态增加连接数，
        当请求过少时，连接池会减少连接数至一个最小空闲值 -->
        <property name="initialSize" value="5" />
        <!-- 在启动连接池初始创建的数据库连接，默认为0 -->
        <property name="maxActive" value="30" />
        <!-- 设置数据库同一时间的最大活跃连接默认为8，负数表示不闲置 -->
        <property name="maxIdle" value="5"/>
        <!-- 在连接池空闲时的最大连接数，超过的会被释放，默认为8，负数表示不闲置 -->
        <property name="minIdle" value="3" />
        <!-- 空闲时的最小连接数，低于这个数量会创建新连接，默认为0 -->
        <property name="maxWait" value="30000" />
        <!-- 连接被用完时等待归还的最大等待时间，单位毫秒，超出时间抛异常，默认为无限等待 -->
    </bean>

    <!--配置SqlSessoinFactory-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"></property>
        <property name="configLocation" value="classpath:mybatis-config.xml"></property>
        <!--加载此配置文件的作用主要是写日志：-->
        <property name="mapperLocations" value="classpath:com/sz/yb/dao/*.xml"></property>
    </bean>

    <!--  接口与sql配置的映射；自动扫锚接口与配置，以后不再写dao层接口的实现类了； -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.sz.yb.dao"></property>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory">
        </property>
    </bean>



    <!-- SpringMvc视图解释器 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver" id="internalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/jsp/" /><!-- 前缀 -->
        <property name="suffix" value=".jsp" /> <!-- 后缀 -->
    </bean>

</beans>














